/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nikki-Pc
 */
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.*;
public class attendance extends javax.swing.JFrame {

    /**
     * Creates new form attendance
     */
    
    //java-sql connector
    java_sql js = new java_sql();
   
    public attendance() {
        initComponents();
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
                              
    private void initComponents() {
// <editor-fold defaultstate="collapsed" desc="Generated Code">
        jScrollPane1 = new javax.swing.JScrollPane();
        attSheet = new javax.swing.JTable();
        profName = new javax.swing.JLabel();
        courseCode = new javax.swing.JLabel();
        section = new javax.swing.JLabel();
        dateButton = new javax.swing.JButton();
        attBar = new javax.swing.JToolBar();
        absentB = new javax.swing.JButton();
        lateB = new javax.swing.JButton();
        presentB = new javax.swing.JButton();
        excusedB = new javax.swing.JButton();
        searchBar = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        attSheet.setAutoCreateRowSorter(true);
        attSheet.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
// </editor-fold>    
        
        //for date
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date current_date = new Date();
        
//        System.out.println(dateFormat.format(current_date));
        
        
//<editor-fold defaultstate="collapsed" desc="queries">
        
        //professors table
        protemp = js.query("SELECT * FROM teacher");
        
        //courses table
        subjtemp = js.query("SELECT * FROM course");

        //attendance table
        attemp = js.query("SELECT * FROM attendance");
        
        //students table
        stemp  = js.query("SELECT * FROM student");
// </editor-fold>
      
        
        //strings initialized to be placed into table
        tIn         = new String[attemp.length];
        tOut        = new String[attemp.length];
        
        lastName    = new String[stemp.length];
        firstName   = new String[stemp.length];
        studID      = new String[stemp.length];
        degProg     = new String[stemp.length];
        attStudID   = new String[attemp.length];
        
        profID      = new String[protemp.length];
        profuName   = new String[protemp.length];
        attProfID   = new String[attemp.length];
        
        subjID      = new String[subjtemp.length];
        subjName    = new String[subjtemp.length];
        attSubjID   = new String[attemp.length];
        
// <editor-fold defaultstate="collapsed" desc="for debugging">
        //debugging   ----- array lengths
        System.out.println("attemp has " + attemp.length + " rows");
        System.out.println("and " + attemp[0].length + " columns");
        
        System.out.println("stemp has " + stemp.length + " rows");
        System.out.println("and " + stemp[0].length + " columns");
        
        System.out.println("subjtemp has " + subjtemp.length + " rows");
        System.out.println("and " + subjtemp[0].length + " columns");
        
        System.out.println("protemp has " + protemp.length + " rows");
        System.out.println("and " + protemp[0].length + " columns");

//        </editor-fold>
        
        //dimensions of table
        erows = attemp.length;
        ecols = attemp[0].length;
        
        //save queried  strings for display
//        attendance query
        for(int cnt = 0; cnt < attemp.length; cnt++)
        {
            tIn[cnt]        = attemp[cnt][3];
       
            tOut[cnt]       ="";
            
            attStudID[cnt]  = attemp[cnt][0];
            
            attProfID[cnt]  = attemp[cnt][1];
            
            attSubjID[cnt]  = attemp[cnt][2];
        }
        
//        student query
        for(int cnt = 0; cnt < stemp.length; cnt++)
        {
            studID[cnt]     = stemp[cnt][0];
            
            lastName[cnt]   = stemp[cnt][2];
       
            firstName[cnt]  = stemp[cnt][1];
        
            degProg[cnt]    = stemp[cnt][5];
        }
        
//        professor query
        for(int cnt = 0; cnt < protemp.length; cnt++)
        {
            profID[cnt]     = protemp[cnt][0];
            
            profuName[cnt]  = protemp[cnt][1] + protemp[cnt][2];
        }
        
        for(int cnt = 0; cnt < subjtemp.length; cnt++)
        {
            subjID[cnt]     = subjtemp[cnt][0];
            
            subjName[cnt]   = subjtemp[cnt][1];
        }
        
        //current professor
        profNow = getProf("200717411111");
        
//        // <editor-fold defaultstate="collapsed" desc="for debugging">
//        for(int x = 0; x < attemp.length; x++)
//        {
//            System.out.println(tIn[x]);
//
//            System.out.println(studID[x]);
//
//            System.out.println(lastName[x]);
//
//            System.out.println(firstName[x]);
//
//            System.out.println(degProg[x]);
//
//            System.out.println();
//        }
//        // </editor-fold>

        int extrarows = 0;
//        if(erows)
        
        Object[][] tempEntries = new Object[erows + extrarows][ecols];
                
        //group data into table
        for(ocy = 0; ocy < erows; ocy++)
        {   
               tempEntries[ocy] =
                 new Object[]
                    {
                        tIn[ocy],
                        tOut[ocy],
                        attStudID[ocy],
                        getLastName(attStudID[ocy]),
                        getFirstName(attStudID[ocy]),
                        getDegProg(attStudID[ocy])
                    };
            
        }
        
        //place temp into table
        tableEntries = tempEntries;
        
//<editor-fold defaultstate="collapsed" desc="Other Generated">
        attSheet.setModel(new javax.swing.table.DefaultTableModel( tableEntries,
            new String [] {
                "IN", "OUT", "ID", "Last Name", "First Name", "Degree Program"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        attSheet.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(attSheet);
        attSheet.getColumnModel().getColumn(0).setMinWidth(40);
        attSheet.getColumnModel().getColumn(0).setPreferredWidth(40);
        attSheet.getColumnModel().getColumn(0).setMaxWidth(40);
        attSheet.getColumnModel().getColumn(0).setHeaderValue("IN");
        attSheet.getColumnModel().getColumn(1).setMinWidth(40);
        attSheet.getColumnModel().getColumn(1).setPreferredWidth(40);
        attSheet.getColumnModel().getColumn(1).setMaxWidth(40);
        attSheet.getColumnModel().getColumn(1).setHeaderValue("OUT");
        attSheet.getColumnModel().getColumn(2).setMinWidth(110);
        attSheet.getColumnModel().getColumn(2).setPreferredWidth(110);
        attSheet.getColumnModel().getColumn(2).setMaxWidth(110);
        attSheet.getColumnModel().getColumn(2).setHeaderValue("ID");
        attSheet.getColumnModel().getColumn(3).setHeaderValue("Last Name");
        attSheet.getColumnModel().getColumn(4).setHeaderValue("First Name");
        attSheet.getColumnModel().getColumn(5).setMinWidth(50);
        attSheet.getColumnModel().getColumn(5).setPreferredWidth(50);
        attSheet.getColumnModel().getColumn(5).setMaxWidth(50);
        attSheet.getColumnModel().getColumn(5).setHeaderValue("Major");

        profName.setText(profNow);

        courseCode.setText(subjNow);

        section.setText("S" + subjSec);

        dateButton.setText("MM/DD/YYYY");
        dateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateButtonActionPerformed(evt);
            }
        });

        attBar.setRollover(true);

        absentB.setBackground(new java.awt.Color(255, 0, 0));
        absentB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        absentB.setForeground(new java.awt.Color(255, 255, 255));
        absentB.setText("A");
        absentB.setActionCommand("Absent");
        absentB.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        absentB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        absentB.setFocusable(false);
        absentB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        absentB.setMaximumSize(new java.awt.Dimension(40, 40));
        absentB.setMinimumSize(new java.awt.Dimension(40, 40));
        absentB.setPreferredSize(new java.awt.Dimension(40, 40));
        absentB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        absentB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                absentBActionPerformed(evt);
            }
        });
        attBar.add(absentB);

        lateB.setBackground(new java.awt.Color(255, 204, 0));
        lateB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lateB.setText("L");
        lateB.setActionCommand("Late");
        lateB.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lateB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lateB.setFocusable(false);
        lateB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lateB.setMargin(new java.awt.Insets(2, 20, 2, 14));
        lateB.setMaximumSize(new java.awt.Dimension(40, 40));
        lateB.setMinimumSize(new java.awt.Dimension(40, 40));
        lateB.setPreferredSize(new java.awt.Dimension(40, 40));
        lateB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lateBActionPerformed(evt);
            }
        });
        attBar.add(lateB);

        presentB.setBackground(new java.awt.Color(0, 204, 0));
        presentB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        presentB.setText("P");
        presentB.setActionCommand("Present");
        presentB.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        presentB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        presentB.setFocusable(false);
        presentB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        presentB.setMargin(new java.awt.Insets(2, 20, 2, 14));
        presentB.setMaximumSize(new java.awt.Dimension(40, 40));
        presentB.setMinimumSize(new java.awt.Dimension(40, 40));
        presentB.setPreferredSize(new java.awt.Dimension(40, 40));
        presentB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        presentB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presentBActionPerformed(evt);
            }
        });
        attBar.add(presentB);

        excusedB.setBackground(new java.awt.Color(153, 153, 255));
        excusedB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        excusedB.setText("E");
        excusedB.setActionCommand("Excused");
        excusedB.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        excusedB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        excusedB.setFocusable(false);
        excusedB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excusedB.setMargin(new java.awt.Insets(2, 20, 2, 14));
        excusedB.setMaximumSize(new java.awt.Dimension(40, 40));
        excusedB.setMinimumSize(new java.awt.Dimension(40, 40));
        excusedB.setPreferredSize(new java.awt.Dimension(40, 40));
        excusedB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excusedB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excusedBActionPerformed(evt);
            }
        });
        attBar.add(excusedB);

        searchBar.setText("Search Student...");
        searchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarActionPerformed(evt);
            }
        });

        searchButton.setText("Go");
        
                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profName)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(courseCode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(section))
                    .addComponent(dateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(attBar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton))))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(profName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(courseCode)
                            .addComponent(section)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchButton))
                        .addGap(18, 18, 18)
                        .addComponent(attBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
// </editor-fold>
        pack();
    }
 
// <editor-fold defaultstate="collapsed" desc="ActionPerformed methods">
    
    private void dateButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void absentBActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void lateBActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void presentBActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void excusedBActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         
    //</editor-fold>
    
    //This should get prof's full name according to login credentials
    private String getProf(String login)
    {
        int IDindex = -1;
        
        for(int x=0; x<protemp.length; x++)
        {
            if(protemp[x][0].equals(login))
            {
                IDindex = x;
            }
        }
        
//        System.out.println(login);
        
        if(IDindex > -1)
        {
//            System.out.println(protemp[IDindex][1] + protemp[IDindex][2]);
            return protemp[IDindex][1] + " " + protemp[IDindex][2];
        }
        else
        {
            return "";
        }
    }
    
    private String getLastName(String ID)
    {
        int x;
        int IDindex=-1;
       
        for(x=0; x<studID.length; x++)
        {
          if(studID[x].equals(ID))
          {
            IDindex=x;
          }
        }
        if(IDindex > -1)
        {
            return lastName[IDindex];
        }
        else
        {
            return "";
        }
    }
    
    private String getFirstName(String ID)
    {
        int x;
        int IDindex=-1;
        
        for(x=0; x<studID.length; x++)
        {
            if(studID[x].equals(ID))
            {
                IDindex=x;
            }
        }
        
        if(IDindex > -1)
        {
            return firstName[IDindex];
        }
        else
        {
            return "";
        }
    }
     
    private String getDegProg(String ID)
    {
        int x;
        int IDindex=-1;
        
        for(x=0; x<studID.length; x++)
        {
            if(studID[x].equals(ID))
            {
                IDindex=x;
            }
        }
        
        if(IDindex > -1)
        {
            return degProg[IDindex];
        }
        else
        {
            return "";
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new attendance().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JButton absentB;
    private javax.swing.JToolBar attBar;
    private Object[][] tableEntries;
    private javax.swing.JTable attSheet;
    ////<editor-fold defaultstate="collapsed" desc="strings to be displayed">

    //</editor-fold>
    private String[] tIn;           //time in
    private String[] tOut;          //time out
    private String[] studID;        //student ID
    private String[] firstName;
    private String[] lastName;
    private String[] degProg;
    private String[] profID;        //professors ID
    private String[] profuName;     //professors full name
    private String[] attStudID;
    private String[] attProfID;
    private String[] attSubjID;
    private String[] subjID;
    private String[] subjName;
    
    private String[][] protemp;     //professors
    private String[][] subjtemp;    //subjects
    private String[][] attemp;      //attendance
    private String[][] stemp;       //students

    private String profNow = "PROF NAME";         //current professor in class
    private String subjNow = "OF COURSE";         //current subject undergoing
    private String subjSec = "100";         //section of current class
    
    private int ocy;    //object count y
    private int erows;    //total row of entries
    private int ecols;    //total column of entries
    private javax.swing.JLabel courseCode;
    private javax.swing.JButton dateButton;
    private javax.swing.JButton excusedB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lateB;
    private javax.swing.JButton presentB;
    private javax.swing.JLabel profName;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel section;
    // End of variables declaration                   
}
